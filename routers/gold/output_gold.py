import os
import re

from aiogram import Router, Bot
from aiogram.types import Message, FSInputFile, CallbackQuery, InputMediaPhoto
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.fsm.context import FSMContext

from routers.menu import menu_handler
from keyboards import return_to_menu_keyboard, admin_output_keyboard, happy, not_happy
from tools.send import send_message_to_admins
from tools.download import download_file
from states import GoldState
from models import Global, User, Output
from filters.admin import IsAdmin
from config import REVIEWS_LINK


router = Router()


@router.message(Text(text="–í—ã–≤–µ—Å—Ç–∏ ü•á", text_ignore_case=True))
async def conclusion_gold_handler(message: Message, state: FSMContext):
    await message.answer("ü•á –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞", reply_markup=return_to_menu_keyboard())
    await state.set_state(GoldState.OUTPUT_AMOUNT)
    
    
@router.message(GoldState.OUTPUT_AMOUNT)
async def conclusion_amount_handler(message: Message, state: FSMContext, user):
    glob = await Global.first()
    if not message.text.isdigit():
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
    else:
        amount = int(message.text)
        if amount < glob.min_gold_output:
            await message.answer(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ {glob.min_gold_output} –∑–æ–ª–æ—Ç–∞")
        elif amount > user.gold:
            await message.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞")
        else:
            amount_comm = amount / 0.8 + 0.17
            photo = FSInputFile("files/examples/item.jpg")
            await message.answer_photo(photo=photo, caption=(
                f"–ó–∞–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É:\n\n1) –ü–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∫ WWWWWWWWW (–¥–æ –∫–æ–Ω—Ü–∞).\n–ë–ª–∞–≥–æ–¥–∞—Ä—è –¥–∞–Ω–Ω–æ–º—É –Ω–∏–∫—É –Ω–µ –±—É–¥–µ—Ç —Ñ–µ–π–∫–æ–≤ –∏ –Ω–∞–º –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è –∂–¥–∞—Ç—å\n\n2) –í—ã—Å—Ç–∞–≤—å—Ç–µ —Å–∫–∏–Ω –Ω–∞ –ø—Ä–æ–¥–∞–∂—É –∑–∞ {amount_comm}\n‚ùó–í–ê–ñ–ù–û‚ùó\n–Ω–∞ —Å–∫–∏–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 3500 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –ø—Ä–æ–¥–∞–∂—É.\n\n3) –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∫–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã—Å—Ç–∞–≤–∏–ª–∏, –Ω–∞–∂–º–∏—Ç–µ —Å–ø—Ä–∞–≤–∞ –¢–û–õ–¨–ö–û –ú–û–ò –ó–ê–ü–†–û–°–´.\n\n4) –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞."))
            await state.set_data({"amount": amount, "amount_comm": amount_comm})
            await state.set_state(GoldState.OUTPUT_ITEM)
            
            
@router.message(GoldState.OUTPUT_ITEM, content_types="photo")
async def output_item_handler(message: Message, state: FSMContext, bot: Bot, user):
    state_data = await state.get_data()
    amount = state_data["amount"]
    output = await Output.create(user_id=message.from_user.id, amount=amount)
    item_name = f"item_{message.from_user.id}_{output.id}"
    user.gold -= amount
    user.total_withdraw_inquiries += 1
    output.item = item_name
    await user.save()
    await output.save()
    file = await download_file(bot, file_id=message.photo[-1].file_id, path="files/items/" + item_name)
    await send_message_to_admins(bot, text=(
        f"ID: {output.id}\n"
        f"Chat ID: {output.user_id}\n"
        f"Item price: {state_data['amount_comm']}\n"
        f"Nickname: @{user.nickname}"),
        photo="files/items/" + item_name + file,
        reply_markup=admin_output_keyboard())
    await message.answer("–û–∂–∏–¥–∞–π—Ç–µ.")
    await state.clear()
    await menu_handler(message, state)
    
    
@router.callback_query(Text(text="confirm_output"), IsAdmin(status=2, answer="–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏ –º–∞–ª."))
async def confirm_output_handler(call: CallbackQuery, bot: Bot, user: User, state: FSMContext):
    output_id = int(re.findall("[0-9]+", call.message.caption)[0])
    output = await Output.get_or_none(id=output_id)
    if output.status == 1:
        await call.message.edit_reply_markup(reply_markup=happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º ({output.admin_id}).")
    elif output.status == 2:
        await call.message.edit_reply_markup(reply_markup=not_happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º ({output.admin_id}). –ü—Ä–∏—á–∏–Ω–∞: {output.cause}")
    else:
        output.status = 1
        output.admin_id = call.from_user.id
        await output.save()
        await call.message.edit_reply_markup(reply_markup=happy())
        await bot.send_message(chat_id=output.user_id, text=f"–í–∞—à –≤—ã–≤–æ–¥ –∑–æ–ª–æ—Ç–∞ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω ‚úÖ\n–°–ø–∞—Å–∏–±–æ –æ–≥—Ä–æ–º–Ω–æ–µ, —á—Ç–æ –≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —ç—Ç–æ–π –ß—É–¥–µ—Å–Ω–æ–π –í–∞–ª—é—Ç—ã –∏–º–µ–Ω–Ω–æ —É –Ω–∞—Å! \n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∞—à –≤—ã–≤–æ–¥ –æ–ø—É–±–ª–∏–∫—É—é—Ç –Ω–∞ –∫–∞–Ω–∞–ª–µ —Å –æ—Ç–∑—ã–≤–∞–º–∏ (@BestMarketG)üí´")
        await call.message.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ª–æ–∂–∏—Ç—å –æ—Ç–∑—ã–≤ –≤ —Å–≤–æ–π –∫–∞–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–∫—É –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚¨ÖÔ∏è¬ª", reply_markup=return_to_menu_keyboard())
        await state.set_data({"output_id": output_id})
        await state.set_state(GoldState.REVIEWS)
        
        
@router.message(GoldState.REVIEWS, content_types="photo")
async def reviews_handler(message: Message, state: FSMContext, bot: Bot):
    state_data = await state.get_data()
    output = await Output.get_or_none(id=state_data["output_id"])
    all_output = await Output.filter(status=1)
    file_id = message.photo[-1].file_id
    file = await bot.get_file(file_id)
    file_name, file_extension = os.path.splitext(file.file_path)
    item_name = f"item_{message.from_user.id}_{output.id}" + file_extension
    await bot.download_file(file.file_path, f"files/items/buy_items/{item_name}")
    media = FSInputFile(f"files/items/{output.item}")
    buy_media = FSInputFile(f"files/items/buy_items/{item_name}")
    media = [InputMediaPhoto(media=media, caption=f"–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ‚úÖ\n–ö—É–ø–∏—Ç—å –≥–æ–ª–¥—É - @{(await bot.get_me()).username}"), InputMediaPhoto(media=buy_media)]
    link = REVIEWS_LINK.split("/")[3]
    await bot.send_media_group(
        chat_id="@"+link,
        media=media
        )
    await message.answer("–û—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
    await menu_handler(message, state)
    
    
@router.callback_query(Text(text="cancel_output"), IsAdmin(status=2, answer="–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏ –º–∞–ª."))
async def cancel_conclusion_handler(call: CallbackQuery, state: FSMContext):
    output_id = int(re.findall("[0-9]+", call.message.caption)[0])
    output = await Output.get_or_none(id=output_id)
    if output.status == 1:
        await call.message.edit_reply_markup(reply_markup=happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º ({output.admin_id}).")
    elif output.status == 2:
        await call.message.edit_reply_markup(reply_markup=not_happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º ({output.admin_id}).")
    else:
        await call.message.edit_reply_markup(reply_markup=not_happy())
        await call.message.reply("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã")
        await state.set_data({"output_id": output_id})
        await state.set_state(GoldState.CANCEL)
        
        
@router.message(GoldState.CANCEL)
async def cause_cancel_output_handler(message: Message, state: FSMContext, user: User, bot: Bot):
    state_data = await state.get_data()
    output_id = state_data["output_id"]
    output = await Output.get_or_none(id=output_id)
    if output.status == 1:
        await message.answer(f"–í—ã–≤–æ–¥ # {output_id} —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∞–¥–º–∏–Ω–æ–º ({output.admin_id}). –°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –≤–≤–æ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É")
    elif output.status == 2:
        await message.answer(f"–í—ã–≤–æ–¥ # {output_id} —É–∂–µ –æ—Ç–º–µ–Ω–µ–Ω –∞–¥–º–∏–Ω–æ–º ({output.admin_id}). –°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –≤–≤–æ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É")
    else:
        output_user = await User.get_or_none(user_id=output.user_id)
        output_user.gold += output.amount
        output.status = 2
        output.admin_id = message.from_user.id
        output.cause = message.text
        await output.save()
        await output_user.save()
        await bot.send_message(chat_id=output.user_id, text=f"–í–∞—à –≤—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω!\n –ü—Ä–∏—á–∏–Ω–∞: {message.text}")
        await message.answer(f"–í—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω.\n–ü—Ä–∏—á–∏–Ω–∞: {message.text}")
        await menu_handler(message, state)
        
        
@router.callback_query(Text(text="check_output"), IsAdmin(status=1))
async def check_conclusion_handler(call: CallbackQuery):
    output_id = int(re.findall("[0-9]+", call.message.caption)[0])
    output = await Output.get_or_none(id=output_id)
    if output.status == 1:
        await call.message.edit_reply_markup(reply_markup=happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. ({output.admin_id})")
    elif output.status == 2:
        await call.message.edit_reply_markup(reply_markup=not_happy())
        await call.message.reply(f"–í—ã–≤–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω. ({output.admin_id})")
    else:
        await call.message.reply("–í—ã–≤–æ–¥ –µ—â–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.")