from aiogram import Router
from aiogram.types import Message
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.fsm.context import FSMContext

from keyboards import return_to_menu_keyboard, count_keyboard
from states import GoldState
from models import Global


router = Router()


@router.message(Text(text="–ü–æ—Å—á–∏—Ç–∞—Ç—å ü•á", text_ignore_case=True))
async def count_gold_handler(message: Message, state: FSMContext):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é:", reply_markup=count_keyboard())
    
    
@router.message(Text(text="–ì–æ–ª–¥—É –≤ —Ä—É–±–ª—è—Öüíé"))
async def gold_rub_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–¥—ã, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å.", reply_markup=return_to_menu_keyboard())
    await state.set_state(GoldState.GOLD_RUB)
    
    
@router.message(Text(text="–†—É–±–ª–∏ –≤ –≥–æ–ª–¥–µüíé"))
async def rub_gold_handler(message: Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤—ã—Ö–æ–¥–∏—Ç –≥–æ–ª–¥—ã.", reply_markup=return_to_menu_keyboard())
    await state.set_state(GoldState.RUB_GOLD)
    
    
@router.message(GoldState.GOLD_RUB)
async def gold_amount_handler(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
    else:
        amount = int(message.text)
        glob = await Global.first()
        if amount < glob.min_gold_amount:
            await message.answer(f"–ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –º–∏–Ω–∏–º—É–º {glob.min_gold_amount} –∑–æ–ª–æ—Ç–∞")
        else:
            price = int(amount * glob.gold_price)
            await message.answer(f"–°—Ç–æ–∏–º–æ—Å—Ç—å {amount} –≥–æ–ª–¥—ã - {price} —Ä—É–±–ª–µ–πüí∏")
            
            
@router.message(GoldState.RUB_GOLD)
async def rub_amount_handler(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
    else:
        amount_rub = int(message.text)
        glob = await Global.first()
        amount_gold = int(amount_rub / glob.gold_price)
        if amount_gold < glob.min_gold_amount:
            await message.answer(f"–ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –º–∏–Ω–∏–º—É–º {glob.min_gold_amount} –∑–æ–ª–æ—Ç–∞")
        else:
            await message.answer(f"–ó–∞ {amount_rub} —Ä—É–±–ª–µ–π –≤—ã –ø–æ–ª—É—á–∏—Ç–µ {amount_gold} –≥–æ–ª–¥—ãüçØ")